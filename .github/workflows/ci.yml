name: Advanced Android CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - '.github/workflows/android.yml'
      - 'app/**'
      - 'gradle/**'
      - 'build.gradle'
      - 'gradle.properties'
  workflow_dispatch:
    inputs:
      # Core options
      skip_notifications:
        description: 'Skip all notifications (Telegram/Slack)'
        type: boolean
        default: true
      skip_apk_sending:
        description: 'Skip sending APK to Telegram'
        type: boolean
        default: false

      # Advanced features (all disabled by default)
      enable_version_increment:
        description: 'Auto-increment versionCode'
        type: boolean
        default: false
      enable_tests:
        description: 'Run unit and UI tests'
        type: boolean
        default: false
      enable_lint:
        description: 'Run Lint checks'
        type: boolean
        default: false
      enable_signing:
        description: 'Sign APK before upload'
        type: boolean
        default: false
      enable_github_release:
        description: 'Create GitHub Release'
        type: boolean
        default: false
      enable_slack_notify:
        description: 'Send Slack notifications'
        type: boolean
        default: false
      enable_firebase_distro:
        description: 'Upload to Firebase App Distribution'
        type: boolean
        default: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      # Conditional: Version code increment
      - name: Increment Version Code
        if: ${{ inputs.enable_version_increment }}
        run: |
          TIMESTAMP=$(date +%s)
          sed -i "s/versionCode [0-9]*/versionCode $TIMESTAMP/" app/build.gradle

      # Conditional: Run tests
      - name: Run Unit Tests
        if: ${{ inputs.enable_tests }}
        run: gradle test

      - name: Run Instrumentation Tests
        if: ${{ inputs.enable_tests }}
        run: gradle connectedAndroidTest

      # Conditional: Lint checks
      - name: Run Lint
        if: ${{ inputs.enable_lint }}
        run: gradle lintDebug

      # Core build step (always runs)
      - name: Build Release APK
        run: gradle assembleRelease

      # Conditional: APK signing
      - name: Sign APK
        if: ${{ inputs.enable_signing }}
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: app/build/outputs/apk/release/app-release.apk

  notifications:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Conditional: Telegram notifications
      - name: Notify Telegram
        if: ${{ !inputs.skip_notifications }}
        uses: ./.github/actions/telegram-notify
        with:
          bot_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}

      # Conditional: Slack notifications
      - name: Notify Slack
        if: ${{ inputs.enable_slack_notify }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: app-release

      # Conditional: GitHub Release
      - name: Create GitHub Release
        if: ${{ inputs.enable_github_release }}
        uses: softprops/action-gh-release@v1
        with:
          files: app-release.apk

      # Conditional: Firebase Distribution
      - name: Deploy to Firebase
        if: ${{ inputs.enable_firebase_distro }}
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          token: ${{ secrets.FIREBASE_TOKEN }}
          file: app-release.apk

      # Conditional: Telegram APK Send
      - name: Send to Telegram
        if: ${{ !inputs.skip_apk_sending }}
        run: python ./.github/workflows/deploy_artifacts.py
        env:
          BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}